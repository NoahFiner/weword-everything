{"version":3,"sources":["components/Footer/index.js","components/Logo/index.js","components/LeftNavbar/index.js","components/Story/index.js","redux/constants/index.js","components/Login/index.js","redux/actions/index.js","components/Book/index.js","components/Home/index.js","components/CreateBook/index.js","components/Router/index.js","serviceWorker.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["Footer","props","state","word","error","handleChange","bind","handleSubmit","storyId","this","ReactGA","pageview","event","setState","target","value","preventDefault","socket","emit","trim","room","username","name","category","action","className","inactive","onSubmit","multipleWords","type","onChange","id","Component","connect","loggedIn","Logo","to","style","borderWidth","size","width","height","fontSize","React","LeftNavbar","collapsed","toggleNavbar","showWordLength","showSentenceLength","showBannedWords","showBannedLetters","rules","story","showCustomRules","customRules","minLength","maxLength","minWords","maxWords","bannedWords","length","bannedCharacters","icon","faAngleDoubleRight","onClick","description","faStar","join","users","map","user","idx","key","ConnectedStory","words","endpoint","disabled","close","match","params","initialLoad","axios","get","response","data","socketIOClient","alert","history","push","on","setTimeout","a","scroll","scrollToBottom","console","TransitionGroup","time","moment","createdAt","format","CSSTransition","timeout","classNames","author","_id","Story","LOGIN","LOGOUT","ConnectedLogin","typedName","handleInputChange","logout","login","e","message","placeholder","display","Login","dispatch","payload","Book","create","faPlusCircle","onlineCount","Home","stories","href","sort","b","transitionDelay","appear","withRouter","CreateBook","title","rulesShown","toggleRulesShown","log","post","min","max","split","RouterOuter","document","path","component","Boolean","window","location","hostname","filter","require","initialState","rootReducer","isProfane","Error","lowerCase","toLowerCase","some","str","includes","store","createStore","initialize","pathname","search","ReactDOM","render","Router","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0020d5ed.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Footer.scss';\nimport {connect} from 'react-redux';\n\nimport ReactGA from 'react-ga';\n\nconst mapStateToProps = state => {\n  return { name: state.name, loggedIn: state.loggedIn };\n};\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {word: '', error: ''}\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    let {storyId} = this.props;\n    ReactGA.pageview('/stories/' + storyId);\n  }\n\n  handleChange(event) {\n    this.setState({word: event.target.value, error: ''});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let {storyId} = this.props;\n\n    this.props.socket.emit(\"addWord\", {word: this.state.word.trim(), room: storyId, username: this.props.name}, (error) => {\n      if(error) {\n        ReactGA.event({\n          category: \"Users\",\n          action: \"Failed write\",\n        });\n        this.setState({error: error});\n      } else {\n        ReactGA.event({\n          category: \"Users\",\n          action: \"Successful write\",\n        });\n        this.setState({word: ''});\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className={\"footer \" + (this.props.inactive ? 'inactive':  '') + ' ' + (this.state.error ? 'error' : '')}>\n        <form onSubmit={this.handleSubmit}>\n          <h1>{this.props.multipleWords ? \"Add word(s)\" : \"Add a word\"}:</h1>\n          <input type=\"text\" onChange={this.handleChange} value={this.state.word} className={\"add-word-input \" + (this.state.error ? 'error' : '')}></input>\n          <input type=\"submit\" value=\"submit\" className=\"button\"></input>\n        </form>\n        <p id=\"error-msg\">\n          {this.state.error}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Footer);\n","import React from 'react';\nimport './Logo.scss';\nimport {Link} from \"react-router-dom\";\n\nclass Logo extends React.Component {\n    render() {\n        return (\n            <Link to=\"/\">\n                <div className=\"logo-box\" style={{borderWidth: this.props.size/15, width: this.props.size + 'px', height: this.props.size + 'px'}}>\n                    <p className=\"logo-line-1\" style={{fontSize: this.props.size/3.5 + 'px'}}>We</p>\n                    <p className=\"logo-line-2\" style={{fontSize: this.props.size/3.5 + 'px'}}>Word</p>\n                </div>\n            </Link>\n        )\n    }\n}\n\nexport default Logo;","import React, {Component} from 'react';\nimport './LeftNavbar.scss';\nimport Logo from '../Logo';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar, faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons';\n\nclass LeftNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {collapsed: true}\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n  }\n\n  toggleNavbar() {\n    this.setState({collapsed: !this.state.collapsed});\n  }\n\n  render() {\n    const rules = this.props.story.rules;\n    let showWordLength, showSentenceLength, showBannedWords, showBannedLetters, showCustomRules = false;\n    if(this.props.story.customRules) {\n      showWordLength = rules.minLength !== 1 || (rules.maxLength !== 16 && rules.maxLength !== 50);\n      showSentenceLength = rules.minWords !== 1 || rules.maxWords !== 1;\n      showBannedWords = rules.bannedWords.length > 0;\n      showBannedLetters = rules.bannedCharacters.length > 0;\n      showCustomRules = showWordLength || showSentenceLength || showBannedLetters || showBannedWords;\n    }\n    \n    return (\n      <div className={\"left-navbar \" + (this.state.collapsed ? \"collapsed\" : \"\")}>\n        <FontAwesomeIcon icon={faAngleDoubleRight} className=\"sidebar-toggle\" onClick={this.toggleNavbar}></FontAwesomeIcon>\n        <div className=\"left-content\">\n          <Logo size='80' />\n          <h1>{this.props.story.name}</h1>\n          <p>{this.props.story.description}</p>\n          {this.props.story.customRules && (\n            <>\n              <div className=\"divider\"></div>\n              <div className=\"rules\">\n                {showCustomRules && <h3><FontAwesomeIcon icon={faStar} className=\"icon\" ></FontAwesomeIcon>Custom Rules</h3>}\n                {showSentenceLength && <p>Submissions must be <span> {rules.minWords === rules.maxWords ? rules.minWords : rules.minWords + '-' + rules.maxWords}</span> words</p>}\n                {showWordLength && <p>Words must be <span>{rules.minLength}-{rules.maxLength}</span> letters</p>}\n                {showBannedWords && <p>You cannot use <span>{rules.bannedWords.join(', ')}</span></p>}\n                {showBannedLetters && <p>Words cannot contain <span>{rules.bannedCharacters.join(', ')}</span></p>}\n              </div>\n            </>\n          )}\n          <div className=\"divider\"></div>\n          <h3>Currently online</h3>\n          {this.props.users.map((user, idx) => {\n            return (\n              <div className=\"user\" key={'user' + idx}>\n                <div className=\"online\"></div>\n                <p>{user}</p>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LeftNavbar;\n","import React, {Component} from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport './Story.scss';\nimport Footer from '../Footer';\nimport LeftNavbar from '../LeftNavbar';\nimport axios from 'axios';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport {connect} from 'react-redux';\nimport moment from 'moment';\n\nimport * as Scroll from 'react-scroll';\nimport { animateScroll as scroll } from 'react-scroll';\n\nconst mapStateToProps = state => {\n  return { name: state.name, loggedIn: state.loggedIn };\n};\n\nclass ConnectedStory extends Component {\n  constructor() {\n    super();\n    this.state = {\n      story: {},\n      words: [],\n      // endpoint: process.env.REACT_APP_API_URL || \"http://127.0.0.1:4001\",\n      endpoint: process.env.NODE_ENV === \"production\" ? \"https://weword.co\" : \"http://127.0.0.1:4001\",\n      socket: null,\n      users: [],\n      disabled: false,\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.socket.close();\n  }\n\n  async componentDidMount() {\n    let {storyId} = this.props.match.params;\n\n    let initialLoad = false;\n\n    const {endpoint} = this.state;\n    try {\n      const response = await axios.get(endpoint + \"/stories/\" + storyId);\n      const {story} = response.data;\n      this.setState({story});\n\n      const socket = socketIOClient(endpoint);\n      this.setState({socket});\n\n\n      socket.emit(\"join\", {room: storyId, username: this.props.name}, error => {\n        if(error) {\n          alert(error);\n          this.props.history.push('/');\n        }\n      });\n\n      socket.on(\"sendWords\", words => {\n        this.setState({words});\n        if(!initialLoad) {\n          initialLoad = true;\n          setTimeout(async () => {\n            scroll.scrollToBottom();\n          }, 750);\n        }\n      });\n\n      socket.on(\"disable\", data => {\n        this.setState({disabled: true});\n      });\n\n      socket.on(\"enable\", data => {\n        this.setState({disabled: false});\n      });\n\n      socket.on(\"sendUsers\", data => {\n        this.setState({users: data});\n      });\n    } catch(e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    const {words} = this.state;\n    return (\n      <div>\n        <LeftNavbar story={this.state.story} users={this.state.users} />\n        <div className=\"content-outer\">\n          <div className=\"content\">\n            <TransitionGroup>\n              {words.map((value, idx) => {\n                const time = moment(value.createdAt).format(\"MM-DD-YYYY h:mm A\");\n                return (<CSSTransition key={\"transition\"+idx} timeout={500} classNames=\"word\">\n                  <>\n                  <p key={idx} className=\"word\">\n                    {value.word}\n                  </p>\n                  <span className=\"user-view\">\n                    by <span className=\"bold\">{value.author}</span> on {time}\n                  </span>\n                  </>\n                </CSSTransition>)\n              })}\n              <div className=\"next-word\"></div>\n            </TransitionGroup>\n          </div>\n        </div>\n        <Footer inactive={this.state.disabled} socket={this.state.socket} storyId={this.state.story._id} multipleWords={this.state.story.rules && this.state.story.rules.maxWords > 1} />\n      </div>\n    );\n  }\n}\n\nconst Story = connect(mapStateToProps)(ConnectedStory);\n\nexport default Story;\n","export const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";","import React, {Component} from 'react';\nimport './Login.scss';\nimport {connect} from 'react-redux'\nimport {login, logout} from '../../redux/actions';\n\nconst mapStateToProps = state => {\n  return { name: state.name, loggedIn: state.loggedIn };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    login: name => dispatch(login(name)),\n    logout: () => dispatch(logout())\n  };\n}\n\n\nclass ConnectedLogin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      typedName: '',\n      error: null,\n      // endpoint: process.env.REACT_APP_API_URL || \"http://127.0.0.1:4001\",\n      endpoint: process.env.NODE_ENV === \"production\" ? \"https://weword.co\" : \"http://127.0.0.1:4001\",\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n\n    this.setState({\n      typedName: value,\n      error: null,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      if(this.props.loggedIn) {\n        this.props.logout();\n      } else {\n        this.props.login(this.state.typedName);\n      }\n      this.setState({ typedName: \"\" });\n    } catch(e) {\n      this.setState({ error: e.message });\n    }\n\n    // try {\n    //   const {data} = await axios.post(this.state.endpoint + '/create', null, {params});\n    //   this.props.history.push('/stories/' + data.story._id);\n    // } catch(error) {\n    //   console.log(error);\n    //   this.setState({error: JSON.stringify(error)});\n    // }\n  }\n\n  render() {\n    return (\n      <form id=\"login\" onSubmit={this.handleSubmit}>\n        {this.props.loggedIn ? (\n          <>\n          <h2>Writing as {this.props.name}</h2>\n          <input type=\"submit\" value=\"Log out\" />\n          </>\n        ) : (\n          <>\n            <input type=\"text\" name=\"name\" placeholder=\"what's your name?\" value={this.state.typedName} onChange={this.handleInputChange} />\n            <input type=\"submit\" value=\"Log in\" />\n            <p className=\"error\" style={{display: (this.state.error ? \"block\" : \"none\")}}>{(this.state.error || \"Couldn't log in\")}</p>\n          </>\n        )}\n      </form>\n    );\n  }\n}\n\nconst Login = connect(mapStateToProps, mapDispatchToProps)(ConnectedLogin);\n\nexport default Login;","import { LOGIN, LOGOUT } from \"../constants\";\n\nexport function login(payload) {\n    return {\n        type: LOGIN,\n        payload\n    }\n}\n\nexport function logout() {\n    return {\n        type: LOGOUT\n    }\n}","import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle, faStar } from '@fortawesome/free-solid-svg-icons';\nimport './Book.scss';\n\nclass Book extends Component {\n  render() {\n    return (\n      <div className={\"book-outer \" + (this.props.create ? \"create\" : \"\")}>\n        {\n          this.props.create ? (\n            <div className=\"book-single\">\n              <h1>create a new story</h1>\n              <FontAwesomeIcon icon={faPlusCircle} className=\"create-book\" ></FontAwesomeIcon>\n            </div>\n          ) : (\n            <>\n              <div className=\"book-header\">\n                <h1>{this.props.story.name}</h1>\n                <p>{this.props.story.description}</p>\n              </div>\n              <div className=\"book-footer\">\n                <p>{this.props.story.length} words</p>\n                {\n                  !this.props.story.customRules ? <></> : (\n                    <div className=\"custom-outer\">\n                      <FontAwesomeIcon icon={faStar} className=\"custom-icon\" ></FontAwesomeIcon>\n                      <p>Custom rules</p>\n                    </div>\n                  )\n                }\n                {\n                  !this.props.story.onlineCount ? <></> : (\n                    <div className=\"online-outer\">\n                      <div className=\"online\"></div>\n                      <p className=\"online-text\">{this.props.story.onlineCount} writers online</p>\n                    </div>\n                  )\n                }\n              </div>\n            </>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Book;\n","import React, {Component} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport Story from  '../Story';\nimport Login from '../Login';\nimport Book from '../Book';\nimport Logo from '../Logo';\nimport axios from 'axios';\nimport './Home.scss';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport {withRouter} from 'react-router';\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stories: [],\n      endpoint: process.env.NODE_ENV === \"production\" ? \"https://weword.co\" : \"http://127.0.0.1:4001\",\n    };\n  }\n\n  async componentDidMount() {\n    const { endpoint } = this.state;\n    try {\n      const response = await axios.get(endpoint + \"/stories\");\n      const stories = response.data.stories;\n      this.setState({stories});\n    } catch(e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    const stories = this.state.stories;\n    return (\n      <div className=\"everything-outer\">\n        <Logo size='150' />\n        <h1>Write a story with a bunch of random people online</h1>\n        <p>(and follow us at <a href=\"https://twitter.com/weword_co\" className=\"link\" target=\"_blank\">@weword_co</a> or give <a className=\"link\" target=\"_blank\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSdTaoCoy686evMyAnDO5djYzo3JxUpRk2UFRQIM7rZ8iR49sw/viewform?usp=sf_link\">anonymous feedback</a> while you're at it)</p>\n        <Login></Login>\n          <TransitionGroup className=\"books-outer\">\n              {stories.sort((a, b) => {\n                if (a.onlineCount === b.onlineCount) {\n                  return a.length < b.length ? 1 : -1\n               }\n               return a.onlineCount < b.onlineCount ? 1 : -1;\n              }).map((story, idx) => {\n                return (<CSSTransition key={story._id} timeout={500} style={{transitionDelay: idx*50+'ms'}} classNames=\"story\">\n                  <Link to={\"/stories/\" + story._id}>\n                    <Book story={story} />\n                  </Link>\n                </CSSTransition>)\n              })}\n              <CSSTransition key=\"create\" timeout={stories.length*50+'ms'} style={{transitionDelay: stories.length*50+'ms'}} appear={true} classNames=\"story\">\n                <Link to=\"/create\">\n                  <Book create />\n                </Link>\n              </CSSTransition>\n          </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n","import React, {Component} from 'react';\nimport Logo from '../Logo';\nimport axios from 'axios';\nimport './CreateBook.scss';\nimport {withRouter} from 'react-router';\n\nimport ReactGA from 'react-ga';\n\nclass CreateBook extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      description: '',\n      error: null,\n      customRules: false,\n      rulesShown: false,\n      minLength: 1,\n      maxLength: 16,\n      minWords: 1,\n      maxWords: 1,\n      bannedCharacters: '',\n      bannedWords: '',\n      endpoint: process.env.NODE_ENV === \"production\" ? \"https://weword.co\" : \"http://127.0.0.1:4001\",\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleRulesShown = this.toggleRulesShown.bind(this);\n  }\n\n  toggleRulesShown(event) {\n    event.preventDefault();\n    this.setState({rulesShown: !this.state.rulesShown});\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    if(name !== \"description\" && name !== \"title\") this.setState({customRules: true});\n    console.log(name);\n    console.log(this.state.customRules);\n\n    this.setState({\n      [name]: value,\n      error: null,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const params = {\n      name: this.state.title,\n      description: this.state.description,\n      customRules: this.state.customRules,\n      rules: {\n        minLength: this.state.minLength,\n        maxLength: this.state.maxLength,\n        minWords: this.state.minWords,\n        maxWords: this.state.maxWords,\n        bannedWords: this.state.bannedWords,\n        bannedCharacters: this.state.bannedCharacters,\n      }\n    }\n    try {\n      const {data} = await axios.post(this.state.endpoint + '/create', null, {params});\n      ReactGA.pageview(\"/stories/create\");\n      ReactGA.event({\n        category: \"Users\",\n        action: \"Book creation\",\n      });\n      this.props.history.push('/stories/' + data.story._id);\n    } catch(error) {\n      if(error.response) {\n        this.setState({error: error.response.data.message});\n      } else {\n        this.setState({error: \"Error in creating your story\"});\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"everything-outer\">\n        <Logo size='150' />\n        <h1>Let's start something great</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Title\n            <span>Think of something short and sweet</span>\n          </label>\n          <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInputChange} />\n\n          <label>\n            Description\n            <span>What's this thing even about?</span>\n          </label>\n          <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleInputChange} />\n          <div className=\"input-button\" onClick={this.toggleRulesShown}>Add custom rules</div>\n          <div className=\"rules-outer\" style={{display: this.state.rulesShown ? 'block' : 'none'}}>\n          <label>\n              Submission length\n              <span>How many words can each person add a time?</span>\n            </label>\n            Minimum words: <input min=\"1\" max=\"16\" type=\"number\" name=\"minWords\" value={this.state.minWords} onChange={this.handleInputChange} />\n            Maximum words: <input min=\"1\" max=\"16\" type=\"number\" name=\"maxWords\" value={this.state.maxWords} onChange={this.handleInputChange} />\n\n            \n            <label>\n              Word length\n              <span>How long can each word be?</span>\n            </label>\n            Minimum characters: <input min=\"1\" max=\"16\" type=\"number\" name=\"minLength\" value={this.state.minLength} onChange={this.handleInputChange} />\n            Maximum characters: <input min=\"1\" max=\"16\" type=\"number\" name=\"maxLength\" value={this.state.maxLength} onChange={this.handleInputChange} />\n\n            <label>\n              Banned words\n              <span>Separate any banned words with spaces or commas</span>\n            </label>\n            <input type=\"text\" name=\"bannedWords\" value={this.state.bannedWords} onChange={this.handleInputChange} />\n\n            <label>\n              Banned characters\n              <span>Separate any banned characters with spaces or commas</span>\n            </label>\n            <input type=\"text\" name=\"bannedCharacters\" value={this.state.bannedCharacters} onChange={this.handleInputChange} />\n\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n          <p className=\"error\" style={{display: (this.state.error ? \"block\" : \"none\")}}>{this.state.error && this.state.error.split(':')[this.state.error.split(':').length - 1]}</p>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CreateBook);\n","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Story from  '../Story';\nimport Home from '../Home';\nimport CreateBook from '../CreateBook';\nimport './RouterOuter.scss';\n\nclass RouterOuter extends Component {\n\n  componentWillMount() {\n    document.title = 'WeWord';\n  }\n\n  render() {\n    return (\n      <div className=\"outer\">\n        <Router>\n          <Switch>\n            <Route path=\"/create\" component={CreateBook} />\n            <Route path=\"/stories/:storyId\" component={Story} />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default RouterOuter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {LOGIN, LOGOUT} from \"../constants\";\n\nvar Filter = require('bad-words'),\n    filter = new Filter();\n\nconst initialState = {\n    loggedIn: false,\n    name: '',\n};\n\nfunction rootReducer(state = initialState, action) {\n    const newState = {};\n    if(action.type === LOGIN) {\n        if(filter.isProfane(action.payload)) {\n            throw new Error(\"Please keep your name civil :)\");\n        }\n        // just a bunch of other bad names\n        const badStrings = [\"nig\", \"niig\", \"niiig\", \"niiiig\", \"niiiiig\", \"niiiiiig\", \"niiiiiiig\", \"niiiiiiiiig\", \"fcuk\", \"fuk\", \"fuc\", \"siht\", \"shit\", \"cunt\", \"cnut\", \"kkk\"];\n        const lowerCase = action.payload.toLowerCase();\n        if(badStrings.some(str => lowerCase.includes(str))) {\n            throw new Error(\"Please keep your name civil :)\");\n        }\n        if(action.payload.length >= 16) {\n            throw new Error(\"Name is too long\");\n        }\n        state = {\n            loggedIn: true,\n            name: action.payload\n        }\n    }\n    else if(action.type === LOGOUT) {\n        state = initialState;\n    }\n    return state;\n}\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport RouterOuter from './components/Router/index';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nimport ReactGA from 'react-ga';\nReactGA.initialize('UA-59921773-10');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n    <Provider store={store}>\n        <RouterOuter />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}