{"version":3,"sources":["components/Footer/index.js","components/Logo/index.js","components/LeftNavbar/index.js","components/Story/index.js","redux/constants/index.js","components/Login/index.js","redux/actions/index.js","components/Book/index.js","components/Home/index.js","components/CreateBook/index.js","components/Router/index.js","serviceWorker.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["Footer","props","state","word","error","handleChange","bind","handleSubmit","storyId","this","ReactGA","pageview","event","setState","target","value","preventDefault","socket","emit","trim","room","username","name","category","action","className","inactive","onSubmit","type","onChange","id","Component","connect","loggedIn","Logo","to","style","borderWidth","size","width","height","fontSize","React","LeftNavbar","story","description","users","map","user","idx","key","ConnectedStory","words","endpoint","disabled","close","match","params","initialLoad","axios","get","response","data","socketIOClient","alert","history","push","on","setTimeout","a","scroll","scrollToBottom","console","TransitionGroup","time","moment","createdAt","format","CSSTransition","timeout","classNames","author","_id","Story","LOGIN","LOGOUT","ConnectedLogin","typedName","handleInputChange","logout","login","e","message","placeholder","display","Login","dispatch","payload","Book","create","icon","faPlusCircle","length","onlineCount","Home","stories","href","sort","b","transitionDelay","appear","withRouter","CreateBook","title","post","log","JSON","stringify","RouterOuter","document","path","component","Boolean","window","location","hostname","initialState","rootReducer","Error","store","createStore","initialize","pathname","search","ReactDOM","render","Router","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8da19236.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Footer.scss';\nimport {connect} from 'react-redux';\n\nimport ReactGA from 'react-ga';\n\nconst mapStateToProps = state => {\n  return { name: state.name, loggedIn: state.loggedIn };\n};\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {word: '', error: ''}\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    let {storyId} = this.props;\n    ReactGA.pageview('/stories/' + storyId);\n  }\n\n  handleChange(event) {\n    this.setState({word: event.target.value, error: ''});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let {storyId} = this.props;\n\n    this.props.socket.emit(\"addWord\", {word: this.state.word.trim(), room: storyId, username: this.props.name}, (error) => {\n      if(error) {\n        ReactGA.event({\n          category: \"Users\",\n          action: \"Failed write\",\n        });\n        this.setState({error: error});\n      } else {\n        ReactGA.event({\n          category: \"Users\",\n          action: \"Successful write\",\n        });\n        this.setState({word: ''});\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className={\"footer \" + (this.props.inactive ? 'inactive':  '')}>\n        <form onSubmit={this.handleSubmit}>\n          <h1>Add a word:</h1>\n          <input type=\"text\" onChange={this.handleChange} value={this.state.word} className={\"add-word-input \" + (this.state.error ? 'error' : '')}></input>\n          <input type=\"submit\" value=\"submit\" className=\"button\"></input>\n        </form>\n        <p id=\"error-msg\">\n          {this.state.error}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Footer);\n","import React from 'react';\nimport './Logo.scss';\nimport {Link} from \"react-router-dom\";\n\nclass Logo extends React.Component {\n    render() {\n        return (\n            <Link to=\"/\">\n                <div className=\"logo-box\" style={{borderWidth: this.props.size/15, width: this.props.size + 'px', height: this.props.size + 'px'}}>\n                    <p className=\"logo-line-1\" style={{fontSize: this.props.size/3.5 + 'px'}}>We</p>\n                    <p className=\"logo-line-2\" style={{fontSize: this.props.size/3.5 + 'px'}}>Word</p>\n                </div>\n            </Link>\n        )\n    }\n}\n\nexport default Logo;","import React, {Component} from 'react';\nimport './LeftNavbar.scss';\nimport Logo from '../Logo';\n\nclass LeftNavbar extends Component {\n  render() {\n    return (\n      <div className=\"left-navbar\">\n        <Logo size='80' />\n        <h1>{this.props.story.name}</h1>\n        <p>{this.props.story.description}</p>\n        <div className=\"divider\"></div>\n        <h3>Currently online</h3>\n        {this.props.users.map((user, idx) => {\n          return (\n            <div className=\"user\" key={'user' + idx}>\n              <div className=\"online\"></div>\n              <p>{user}</p>\n            </div>\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nexport default LeftNavbar;\n","import React, {Component} from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport './Story.scss';\nimport Footer from '../Footer';\nimport LeftNavbar from '../LeftNavbar';\nimport axios from 'axios';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport {connect} from 'react-redux';\nimport moment from 'moment';\n\nimport * as Scroll from 'react-scroll';\nimport { animateScroll as scroll } from 'react-scroll';\n\nconst mapStateToProps = state => {\n  return { name: state.name, loggedIn: state.loggedIn };\n};\n\nclass ConnectedStory extends Component {\n  constructor() {\n    super();\n    this.state = {\n      story: {},\n      words: [],\n      // endpoint: process.env.REACT_APP_API_URL || \"http://127.0.0.1:4001\",\n      endpoint: process.env.NODE_ENV === \"production\" ? \"https://weword.co\" : \"http://127.0.0.1:4001\",\n      socket: null,\n      users: [],\n      disabled: false,\n    };\n  }\n\n  componentWillUnmount() {\n    this.state.socket.close();\n  }\n\n  async componentDidMount() {\n    let {storyId} = this.props.match.params;\n\n    let initialLoad = false;\n\n    const {endpoint} = this.state;\n    try {\n      const response = await axios.get(endpoint + \"/stories/\" + storyId);\n      const {story} = response.data;\n      this.setState({story});\n\n      const socket = socketIOClient(endpoint);\n      this.setState({socket});\n\n\n      socket.emit(\"join\", {room: storyId, username: this.props.name}, error => {\n        if(error) {\n          alert(error);\n          this.props.history.push('/');\n        }\n      });\n\n      socket.on(\"sendWords\", words => {\n        this.setState({words});\n        if(!initialLoad) {\n          initialLoad = true;\n          setTimeout(async () => {\n            scroll.scrollToBottom();\n          }, 750);\n        }\n      });\n\n      socket.on(\"disable\", data => {\n        this.setState({disabled: true});\n      });\n\n      socket.on(\"enable\", data => {\n        this.setState({disabled: false});\n      });\n\n      socket.on(\"sendUsers\", data => {\n        this.setState({users: data});\n      });\n    } catch(e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    const {words} = this.state;\n    return (\n      <div>\n        <LeftNavbar story={this.state.story} users={this.state.users} />\n        <div className=\"content-outer\">\n          <div className=\"content\">\n            <TransitionGroup>\n              {words.map((value, idx) => {\n                const time = moment(value.createdAt).format(\"MM-DD-YYYY h:mm A\");\n                return (<CSSTransition key={\"transition\"+idx} timeout={500} classNames=\"word\">\n                  <>\n                  <p key={idx} className=\"word\">\n                    {value.word}\n                  </p>\n                  <span className=\"user-view\">\n                    by <span className=\"bold\">{value.author}</span> on {time}\n                  </span>\n                  </>\n                </CSSTransition>)\n              })}\n              <div className=\"next-word\"></div>\n            </TransitionGroup>\n          </div>\n        </div>\n        <Footer inactive={this.state.disabled} socket={this.state.socket} storyId={this.state.story._id} />\n      </div>\n    );\n  }\n}\n\nconst Story = connect(mapStateToProps)(ConnectedStory);\n\nexport default Story;\n","export const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";","import React, {Component} from 'react';\nimport './Login.scss';\nimport {connect} from 'react-redux'\nimport {login, logout} from '../../redux/actions';\n\nconst mapStateToProps = state => {\n  return { name: state.name, loggedIn: state.loggedIn };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    login: name => dispatch(login(name)),\n    logout: () => dispatch(logout())\n  };\n}\n\n\nclass ConnectedLogin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      typedName: '',\n      error: null,\n      // endpoint: process.env.REACT_APP_API_URL || \"http://127.0.0.1:4001\",\n      endpoint: process.env.NODE_ENV === \"production\" ? \"https://weword.co\" : \"http://127.0.0.1:4001\",\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n\n    this.setState({\n      typedName: value,\n      error: null,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    try {\n      if(this.props.loggedIn) {\n        this.props.logout();\n      } else {\n        this.props.login(this.state.typedName);\n      }\n      this.setState({ typedName: \"\" });\n    } catch(e) {\n      this.setState({ error: e.message });\n    }\n\n    // try {\n    //   const {data} = await axios.post(this.state.endpoint + '/create', null, {params});\n    //   this.props.history.push('/stories/' + data.story._id);\n    // } catch(error) {\n    //   console.log(error);\n    //   this.setState({error: JSON.stringify(error)});\n    // }\n  }\n\n  render() {\n    return (\n      <form id=\"login\" onSubmit={this.handleSubmit}>\n        {this.props.loggedIn ? (\n          <>\n          <h2>Writing as {this.props.name}</h2>\n          <input type=\"submit\" value=\"Log out\" />\n          </>\n        ) : (\n          <>\n            <input type=\"text\" name=\"name\" placeholder=\"what's your name?\" value={this.state.typedName} onChange={this.handleInputChange} />\n            <input type=\"submit\" value=\"Log in\" />\n            <p className=\"error\" style={{display: (this.state.error ? \"block\" : \"none\")}}>{(this.state.error || \"Couldn't log in\")}</p>\n          </>\n        )}\n      </form>\n    );\n  }\n}\n\nconst Login = connect(mapStateToProps, mapDispatchToProps)(ConnectedLogin);\n\nexport default Login;","import { LOGIN, LOGOUT } from \"../constants\";\n\nexport function login(payload) {\n    return {\n        type: LOGIN,\n        payload\n    }\n}\n\nexport function logout() {\n    return {\n        type: LOGOUT\n    }\n}","import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport './Book.scss';\n\nclass Book extends Component {\n  render() {\n    return (\n      <div className={\"book-outer \" + (this.props.create ? \"create\" : \"\")}>\n        {\n          this.props.create ? (\n            <div className=\"book-single\">\n              <h1>create a new story</h1>\n              <FontAwesomeIcon icon={faPlusCircle} className=\"create-book\" ></FontAwesomeIcon>\n            </div>\n          ) : (\n            <>\n              <div className=\"book-header\">\n                <h1>{this.props.story.name}</h1>\n                <p>{this.props.story.description}</p>\n              </div>\n              <div className=\"book-footer\">\n                <p>{this.props.story.length} words</p>\n                {\n                  !this.props.story.onlineCount ? <></> : (\n                    <div className=\"online-outer\">\n                      <div className=\"online\"></div>\n                      <p className=\"online-text\">{this.props.story.onlineCount} writers online</p>\n                    </div>\n                  )\n                }\n              </div>\n            </>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Book;\n","import React, {Component} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport Story from  '../Story';\nimport Login from '../Login';\nimport Book from '../Book';\nimport Logo from '../Logo';\nimport axios from 'axios';\nimport './Home.scss';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport {withRouter} from 'react-router';\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stories: [],\n      // TODO THIS IS HELLA INSECURE\n      // endpoint: process.env.REACT_APP_API_URL || \"http://127.0.0.1:4001\",\n      endpoint: process.env.NODE_ENV === \"production\" ? \"https://weword.co\" : \"http://127.0.0.1:4001\",\n    };\n  }\n\n  async componentDidMount() {\n    const { endpoint } = this.state;\n    try {\n      const response = await axios.get(endpoint + \"/stories\");\n      const stories = response.data.stories;\n      this.setState({stories});\n    } catch(e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    const stories = this.state.stories;\n    return (\n      <div className=\"everything-outer\">\n        <Logo size='150' />\n        <h1>Write a story with a bunch of random people online</h1>\n        <p>(and follow us at <a href=\"https://twitter.com/weword_co\" className=\"link\" target=\"_blank\">@weword_co</a> or give <a className=\"link\" target=\"_blank\" href=\"https://docs.google.com/forms/d/e/1FAIpQLSdTaoCoy686evMyAnDO5djYzo3JxUpRk2UFRQIM7rZ8iR49sw/viewform?usp=sf_link\">anonymous feedback</a> while you're at it)</p>\n        <Login></Login>\n          <TransitionGroup className=\"books-outer\">\n              {stories.sort((a, b) => {\n                if (a.onlineCount === b.onlineCount) {\n                  return a.length < b.length ? 1 : -1\n               }\n               return a.onlineCount < b.onlineCount ? 1 : -1;\n              }).map((story, idx) => {\n                return (<CSSTransition key={story._id} timeout={500} style={{transitionDelay: idx*50+'ms'}} classNames=\"story\">\n                  <Link to={\"/stories/\" + story._id}>\n                    <Book story={story} />\n                  </Link>\n                </CSSTransition>)\n              })}\n              <CSSTransition key=\"create\" timeout={stories.length*50+'ms'} style={{transitionDelay: stories.length*50+'ms'}} appear={true} classNames=\"story\">\n                <Link to=\"/create\">\n                  <Book create />\n                </Link>\n              </CSSTransition>\n          </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n","import React, {Component} from 'react';\nimport Logo from '../Logo';\nimport axios from 'axios';\nimport './CreateBook.scss';\nimport {withRouter} from 'react-router';\n\nimport ReactGA from 'react-ga';\n\nclass CreateBook extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      description: '',\n      error: null,\n      // TODO THIS IS HELLA INSECURE\n      // endpoint: process.env.REACT_APP_API_URL || \"http://127.0.0.1:4001\",\n      endpoint: process.env.NODE_ENV === \"production\" ? \"https://weword.co\" : \"http://127.0.0.1:4001\",\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n      error: null,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const params = {\n      name: this.state.title,\n      description: this.state.description,\n    }\n    try {\n      const {data} = await axios.post(this.state.endpoint + '/create', null, {params});\n      ReactGA.pageview(\"/stories/create\");\n      ReactGA.event({\n        category: \"Users\",\n        action: \"Book creation\",\n      });\n      this.props.history.push('/stories/' + data.story._id);\n    } catch(error) {\n      console.log(error);\n      this.setState({error: JSON.stringify(error)});\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"everything-outer\">\n        <Logo size='150' />\n        <h1>Let's start something great</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Title\n            <span>Think of something short and sweet</span>\n          </label>\n          <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInputChange} />\n\n          <label>\n            Description\n            <span>What's this thing even about?</span>\n          </label>\n          <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleInputChange} />\n          <input type=\"submit\" value=\"Submit\" />\n          <p className=\"error\" style={{display: (this.state.error ? \"block\" : \"none\")}}>Error in creating your story</p>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CreateBook);\n","import React, {Component} from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Story from  '../Story';\nimport Home from '../Home';\nimport CreateBook from '../CreateBook';\nimport './RouterOuter.scss';\n\nclass RouterOuter extends Component {\n\n  componentWillMount() {\n    document.title = 'WeWord';\n  }\n\n  render() {\n    return (\n      <div className=\"outer\">\n        <Router>\n          <Switch>\n            <Route path=\"/create\" component={CreateBook} />\n            <Route path=\"/stories/:storyId\" component={Story} />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default RouterOuter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {LOGIN, LOGOUT} from \"../constants\";\n\nconst initialState = {\n    loggedIn: false,\n    name: '',\n}\n\nfunction rootReducer(state = initialState, action) {\n    const newState = {}\n    if(action.type === LOGIN) {\n        if(action.payload.length >= 16) {\n            throw new Error(\"Name is too long\");\n        }\n        state = {\n            loggedIn: true,\n            name: action.payload\n        }\n    }\n    else if(action.type === LOGOUT) {\n        state = initialState;\n    }\n    return state;\n}\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport RouterOuter from './components/Router/index';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nimport ReactGA from 'react-ga';\nReactGA.initialize('UA-59921773-10');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n    <Provider store={store}>\n        <RouterOuter />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}