{"version":3,"sources":["components/Footer/index.js","components/Logo/index.js","components/LeftNavbar/index.js","components/Story/index.js","redux/constants/index.js","components/Login/index.js","redux/actions/index.js","components/Book/index.js","components/Home/index.js","components/CreateBook/index.js","components/Router/index.js","serviceWorker.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["Footer","props","state","word","error","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","storyId","socket","emit","trim","room","username","name","className","inactive","onSubmit","type","onChange","id","Component","connect","loggedIn","Logo","to","style","borderWidth","size","width","height","fontSize","React","LeftNavbar","story","description","users","map","user","idx","key","class","ConnectedStory","words","endpoint","disabled","console","log","process","REACT_APP_API_URL","close","match","params","axios","get","response","data","socketIOClient","alert","history","push","on","TransitionGroup","CSSTransition","timeout","classNames","_id","Story","LOGIN","LOGOUT","ConnectedLogin","typedName","handleInputChange","logout","login","placeholder","display","Login","dispatch","payload","Book","create","icon","faPlusCircle","length","onlineCount","Home","stories","sort","a","b","transitionDelay","appear","withRouter","CreateBook","title","post","JSON","stringify","RouterOuter","document","path","component","Boolean","window","location","hostname","initialState","rootReducer","action","store","createStore","ReactGA","initialize","pageview","pathname","search","ReactDOM","render","Router","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2eAQMA,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CAACC,KAAM,GAAIC,MAAO,IAE/B,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBALH,E,0EAQNE,GACXC,KAAKC,SAAS,CAACP,KAAMK,EAAMG,OAAOC,MAAOR,MAAO,O,mCAGrCI,GAAQ,IAAD,OAClBA,EAAMK,iBADY,IAEbC,EAAWL,KAAKR,MAAhBa,QAELL,KAAKR,MAAMc,OAAOC,KAAK,UAAW,CAACb,KAAMM,KAAKP,MAAMC,KAAKc,OAAQC,KAAMJ,EAASK,SAAUV,KAAKR,MAAMmB,OAAO,SAAChB,GACxGA,EACY,mBAAVA,GACD,EAAKM,SAAS,CAACN,UAGjB,EAAKM,SAAS,CAACP,KAAM,U,+BAMzB,OACE,yBAAKkB,UAAW,WAAaZ,KAAKR,MAAMqB,SAAW,WAAa,KAC9D,0BAAMC,SAAUd,KAAKF,cACnB,2CACA,2BAAOiB,KAAK,OAAOC,SAAUhB,KAAKJ,aAAcO,MAAOH,KAAKP,MAAMC,KAAMkB,UAAW,mBAAqBZ,KAAKP,MAAME,MAAQ,QAAU,MACrI,2BAAOoB,KAAK,SAASZ,MAAM,SAASS,UAAU,YAEhD,uBAAGK,GAAG,aACHjB,KAAKP,MAAME,Y,GArCDuB,aA4CNC,eAhDS,SAAA1B,GACtB,MAAO,CAAEkB,KAAMlB,EAAMkB,KAAMS,SAAU3B,EAAM2B,YA+C9BD,CAAyB5B,GCnCzB8B,G,+LAXP,OACI,kBAAC,IAAD,CAAMC,GAAG,KACL,yBAAKV,UAAU,WAAWW,MAAO,CAACC,YAAaxB,KAAKR,MAAMiC,KAAK,GAAIC,MAAO1B,KAAKR,MAAMiC,KAAO,KAAME,OAAQ3B,KAAKR,MAAMiC,KAAO,OACxH,uBAAGb,UAAU,cAAcW,MAAO,CAACK,SAAU5B,KAAKR,MAAMiC,KAAK,IAAM,OAAnE,MACA,uBAAGb,UAAU,cAAcW,MAAO,CAACK,SAAU5B,KAAKR,MAAMiC,KAAK,IAAM,OAAnE,c,GANDI,IAAMX,YCsBVY,E,iLApBX,OACE,yBAAKlB,UAAU,eACb,kBAAC,EAAD,CAAMa,KAAK,OACX,4BAAKzB,KAAKR,MAAMuC,MAAMpB,MACtB,2BAAIX,KAAKR,MAAMuC,MAAMC,aACrB,yBAAKpB,UAAU,YACf,gDACCZ,KAAKR,MAAMyC,MAAMC,KAAI,SAACC,EAAMC,GAC3B,OACE,yBAAKxB,UAAU,OAAOyB,IAAK,OAASD,GAClC,yBAAKE,MAAM,WACX,2BAAIH,Y,GAbOjB,a,mCCSnBqB,E,YACJ,aAAe,IAAD,8BACZ,+CACK9C,MAAQ,CACXsC,MAAO,GACPS,MAAO,GAEPC,SAAkD,wBAClDnC,OAAQ,KACR2B,MAAO,GACPS,UAAU,GAEZC,QAAQC,IAAIC,cACZF,QAAQC,IAAI,UAAWC,8CAAYC,mBAZvB,E,oFAgBZ9C,KAAKP,MAAMa,OAAOyC,U,gLAIb1C,EAAWL,KAAKR,MAAMwD,MAAMC,OAA5B5C,QACEoC,EAAYzC,KAAKP,MAAjBgD,S,kBAEkBS,IAAMC,IAAIV,EAAW,YAAcpC,G,OAApD+C,E,OACCrB,EAASqB,EAASC,KAAlBtB,MACPY,QAAQC,IAAIb,GACZ/B,KAAKC,SAAS,CAAC8B,UAETzB,EAASgD,IAAeb,GAC9BzC,KAAKC,SAAS,CAACK,WAEfqC,QAAQC,IAAI5C,KAAKR,MAAMmB,KAAO,eAE9BL,EAAOC,KAAK,OAAQ,CAACE,KAAMJ,EAASK,SAAUV,KAAKR,MAAMmB,OAAO,SAAAhB,GAC3DA,IACD4D,MAAM5D,GACN,EAAKH,MAAMgE,QAAQC,KAAK,SAI5BnD,EAAOoD,GAAG,aAAa,SAAAlB,GACrBG,QAAQC,IAAI,sBAAuBJ,GACnC,EAAKvC,SAAS,CAACuC,aAGjBlC,EAAOoD,GAAG,WAAW,SAAAL,GACnB,EAAKpD,SAAS,CAACyC,UAAU,OAG3BpC,EAAOoD,GAAG,UAAU,SAAAL,GAClB,EAAKpD,SAAS,CAACyC,UAAU,OAG3BpC,EAAOoD,GAAG,aAAa,SAAAL,GACrB,EAAKpD,SAAS,CAACgC,MAAOoB,O,kDAGxBV,QAAQhD,MAAR,M,+IAIM,IACD6C,EAASxC,KAAKP,MAAd+C,MAEP,OADAG,QAAQC,IAAIJ,GAEV,6BACE,kBAAC,EAAD,CAAYT,MAAO/B,KAAKP,MAAMsC,MAAOE,MAAOjC,KAAKP,MAAMwC,QACvD,yBAAKrB,UAAU,iBACb,yBAAKA,UAAU,WACb,kBAAC+C,EAAA,EAAD,KACGnB,EAAMN,KAAI,SAAC/B,EAAOiC,GACjB,OAAQ,kBAACwB,EAAA,EAAD,CAAeC,QAAS,IAAKC,WAAW,QAC9C,uBAAGzB,IAAKD,EAAKxB,UAAU,QAAQT,EAAMT,UAGzC,yBAAKkB,UAAU,iBAIrB,kBAAC,EAAD,CAAQC,SAAUb,KAAKP,MAAMiD,SAAUpC,OAAQN,KAAKP,MAAMa,OAAQD,QAASL,KAAKP,MAAMsC,MAAMgC,W,GAhFvE7C,aAwFd8C,EAFD7C,aA1FU,SAAA1B,GACtB,MAAO,CAAEkB,KAAMlB,EAAMkB,KAAMS,SAAU3B,EAAM2B,YAyF/BD,CAAyBoB,GCnG1B0B,G,OAAQ,SACRC,EAAS,S,ICgBhBC,E,YACJ,aAAe,IAAD,8BACZ,+CACK1E,MAAQ,CACX2E,UAAW,GACXzE,MAAO,KAEP8C,SAAkD,yBAGpDE,QAAQC,IAAI,UAAWC,8CAAYC,mBAEnC,EAAKuB,kBAAoB,EAAKA,kBAAkBxE,KAAvB,gBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAZR,E,+EAeIE,GAChB,IACMI,EADSJ,EAAMG,OACAC,MAErBH,KAAKC,SAAS,CACZmE,UAAWjE,EACXR,MAAO,S,4EAIQI,G,iEACjBA,EAAMK,iBACHJ,KAAKR,MAAM4B,SACZpB,KAAKR,MAAM8E,SAEXtE,KAAKR,MAAM+E,MAAMvE,KAAKP,MAAM2E,WAG9BpE,KAAKC,SAAS,CAAEmE,UAAW,KAC3BzB,QAAQC,IAAI5C,KAAKR,MAAM4B,U,sIAYvB,OACE,0BAAMH,GAAG,QAAQH,SAAUd,KAAKF,cAC7BE,KAAKR,MAAM4B,SACV,oCACA,0CAAgBpB,KAAKR,MAAMmB,MAC3B,2BAAOI,KAAK,SAASZ,MAAM,aAG3B,oCACE,2BAAOY,KAAK,OAAOJ,KAAK,OAAO6D,YAAY,oBAAoBrE,MAAOH,KAAKP,MAAM2E,UAAWpD,SAAUhB,KAAKqE,oBAC3G,2BAAOtD,KAAK,SAASZ,MAAM,WAC3B,uBAAGS,UAAU,QAAQW,MAAO,CAACkD,QAAUzE,KAAKP,MAAME,MAAQ,QAAU,SAApE,sC,GA1DiBuB,aAoEdwD,EAFDvD,aA9EU,SAAA1B,GACtB,MAAO,CAAEkB,KAAMlB,EAAMkB,KAAMS,SAAU3B,EAAM2B,aAG7C,SAA4BuD,GAC1B,MAAO,CACLJ,MAAO,SAAA5D,GAAI,OAAIgE,ECRR,CACH5D,KAAMkD,EACNW,QDM0BjE,KAC9B2D,OAAQ,kBAAMK,ECFP,CACH5D,KAAMmD,QDwEA/C,CAA6CgD,G,gBE1C5CU,G,wLAjCX,OADAlC,QAAQC,IAAI5C,KAAKR,MAAMuC,OAErB,yBAAKnB,UAAW,eAAiBZ,KAAKR,MAAMsF,OAAS,SAAW,KAE5D9E,KAAKR,MAAMsF,OACT,yBAAKlE,UAAU,eACb,kDACA,kBAAC,IAAD,CAAiBmE,KAAMC,IAAcpE,UAAU,iBAGjD,oCACE,yBAAKA,UAAU,eACb,4BAAKZ,KAAKR,MAAMuC,MAAMpB,MACtB,2BAAIX,KAAKR,MAAMuC,MAAMC,cAEvB,yBAAKpB,UAAU,eACb,2BAAIZ,KAAKR,MAAMuC,MAAMkD,OAArB,UAEGjF,KAAKR,MAAMuC,MAAMmD,YAChB,yBAAKtE,UAAU,gBACb,yBAAKA,UAAU,WACf,uBAAGA,UAAU,eAAeZ,KAAKR,MAAMuC,MAAMmD,YAA7C,oBAH4B,4C,GApB/BhE,cCWbiE,G,mBACJ,aAAe,IAAD,8BACZ,+CACK1F,MAAQ,CACX2F,QAAS,GAGT3C,SAAkD,yBAEpDE,QAAQC,IAAIC,cACZF,QAAQC,IAAI,UAAWC,8CAAYC,mBATvB,E,4MAaJL,EAAazC,KAAKP,MAAlBgD,S,kBAEiBS,IAAMC,IAAIV,EAAW,Y,OAAtCW,E,OACAgC,EAAUhC,EAASC,KAAK+B,QAC9BpF,KAAKC,SAAS,CAACmF,Y,gDAEfzC,QAAQhD,MAAR,M,8IAKF,IAAMyF,EAAUpF,KAAKP,MAAM2F,QAC3B,OACE,yBAAKxE,UAAU,oBACb,kBAAC,EAAD,CAAMa,KAAK,QACX,kFACA,kBAAC,EAAD,MACE,kBAACkC,EAAA,EAAD,CAAiB/C,UAAU,eACtBwE,EAAQC,MAAK,SAACC,EAAGC,GAChB,OAAID,EAAEJ,cAAgBK,EAAEL,YACfI,EAAEL,OAASM,EAAEN,OAAS,GAAK,EAE9BK,EAAEJ,YAAcK,EAAEL,YAAc,GAAK,KAC1ChD,KAAI,SAACH,EAAOK,GACb,OAAQ,kBAACwB,EAAA,EAAD,CAAevB,IAAKN,EAAMgC,IAAKF,QAAS,IAAKtC,MAAO,CAACiE,gBAAqB,GAAJpD,EAAO,MAAO0B,WAAW,SACrG,kBAAC,IAAD,CAAMxC,GAAI,YAAcS,EAAMgC,KAC5B,kBAAC,EAAD,CAAMhC,MAAOA,SAInB,kBAAC6B,EAAA,EAAD,CAAevB,IAAI,SAASwB,QAAwB,GAAfuB,EAAQH,OAAU,KAAM1D,MAAO,CAACiE,gBAAgC,GAAfJ,EAAQH,OAAU,MAAOQ,QAAQ,EAAM3B,WAAW,SACtI,kBAAC,IAAD,CAAMxC,GAAG,WACP,kBAAC,EAAD,CAAMwD,QAAM,Y,GA9CX5D,cAuDJwE,cAAWP,G,QCjEpBQ,G,mBACJ,aAAe,IAAD,8BACZ,+CACKlG,MAAQ,CACXmG,MAAO,GACP5D,YAAa,GACbrC,MAAO,KAGP8C,SAAkD,yBAEpDE,QAAQC,IAAIC,cACZF,QAAQC,IAAI,UAAWC,8CAAYC,mBAEnC,EAAKuB,kBAAoB,EAAKA,kBAAkBxE,KAAvB,gBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAdR,E,+EAiBIE,GAAQ,IAAD,EACjBG,EAASH,EAAMG,OACfC,EAAQD,EAAOC,MACfQ,EAAOT,EAAOS,KAEpBX,KAAKC,UAAL,mBACGU,EAAOR,GADV,sBAES,MAFT,M,4EAMiBJ,G,kFACjBA,EAAMK,iBACA6C,EAAS,CACbtC,KAAMX,KAAKP,MAAMmG,MACjB5D,YAAahC,KAAKP,MAAMuC,aAE1BW,QAAQC,IAAI,aAAcK,G,kBAEHC,IAAM2C,KAAK7F,KAAKP,MAAMgD,SAAW,UAAW,KAAM,CAACQ,W,gBAAjEI,E,EAAAA,KACPrD,KAAKR,MAAMgE,QAAQC,KAAK,YAAcJ,EAAKtB,MAAMgC,K,kDAEjDpB,QAAQC,IAAR,MACA5C,KAAKC,SAAS,CAACN,MAAOmG,KAAKC,UAAL,Q,gJAKxB,OACE,yBAAKnF,UAAU,oBACb,kBAAC,EAAD,CAAMa,KAAK,QACX,2DACA,0BAAMX,SAAUd,KAAKF,cACnB,uCAEE,qEAEF,2BAAOiB,KAAK,OAAOJ,KAAK,QAAQR,MAAOH,KAAKP,MAAMmG,MAAO5E,SAAUhB,KAAKqE,oBAExE,6CAEE,gEAEF,2BAAOtD,KAAK,OAAOJ,KAAK,cAAcR,MAAOH,KAAKP,MAAMuC,YAAahB,SAAUhB,KAAKqE,oBACpF,2BAAOtD,KAAK,SAASZ,MAAM,WAC3B,uBAAGS,UAAU,QAAQW,MAAO,CAACkD,QAAUzE,KAAKP,MAAME,MAAQ,QAAU,SAApE,sC,GA/DeuB,cAsEVwE,cAAWC,GC5CXK,G,oMAlBXC,SAASL,MAAQ,W,+BAIjB,OACE,yBAAKhF,UAAU,SACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsF,KAAK,UAAUC,UAAWR,IACjC,kBAAC,IAAD,CAAOO,KAAK,oBAAoBC,UAAWnC,IAC3C,kBAAC,IAAD,CAAOkC,KAAK,IAAIC,UAAWhB,W,GAbbjE,cCCNkF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASvD,MACvB,2D,YChBAwD,EAAe,CACjBpF,UAAU,EACVT,KAAM,IAiBK8F,MAdf,WAAoD,IAA/BhH,EAA8B,uDAAtB+G,EAAcE,EAAQ,uCAW/C,OATGA,EAAO3F,OAASkD,EACfxE,EAAQ,CACJ2B,UAAU,EACVT,KAAM+F,EAAO9B,SAGb8B,EAAO3F,OAASmD,IACpBzE,EAAQ+G,GAEL/G,GCbIkH,EAFDC,YAAYH,G,QCQ1BI,IAAQC,WAAW,kBACnBD,IAAQE,SAASV,OAAOC,SAASU,SAAWX,OAAOC,SAASW,QAE5DC,IAASC,OACL,kBAAC,IAAD,CAAUR,MAAOA,GACb,kBAACS,EAAD,OAENnB,SAASoB,eAAe,SH+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.7eb1ca81.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Footer.scss';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = state => {\n  return { name: state.name, loggedIn: state.loggedIn };\n};\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {word: '', error: ''}\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({word: event.target.value, error: ''});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let {storyId} = this.props;\n\n    this.props.socket.emit(\"addWord\", {word: this.state.word.trim(), room: storyId, username: this.props.name}, (error) => {\n      if(error) {\n        if(error !== \"duplicate word\") {\n          this.setState({error});\n        }\n      } else {\n        this.setState({word: ''});\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className={\"footer \" + (this.props.inactive ? 'inactive':  '')}>\n        <form onSubmit={this.handleSubmit}>\n          <h1>Add a word:</h1>\n          <input type=\"text\" onChange={this.handleChange} value={this.state.word} className={\"add-word-input \" + (this.state.error ? 'error' : '')}></input>\n          <input type=\"submit\" value=\"submit\" className=\"button\"></input>\n        </form>\n        <p id=\"error-msg\">\n          {this.state.error}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Footer);\n","import React from 'react';\nimport './Logo.scss';\nimport {Link} from \"react-router-dom\";\n\nclass Logo extends React.Component {\n    render() {\n        return (\n            <Link to=\"/\">\n                <div className=\"logo-box\" style={{borderWidth: this.props.size/15, width: this.props.size + 'px', height: this.props.size + 'px'}}>\n                    <p className=\"logo-line-1\" style={{fontSize: this.props.size/3.5 + 'px'}}>We</p>\n                    <p className=\"logo-line-2\" style={{fontSize: this.props.size/3.5 + 'px'}}>Word</p>\n                </div>\n            </Link>\n        )\n    }\n}\n\nexport default Logo;","import React, {Component} from 'react';\nimport './LeftNavbar.scss';\nimport Logo from '../Logo';\n\nclass LeftNavbar extends Component {\n  render() {\n    return (\n      <div className=\"left-navbar\">\n        <Logo size='80' />\n        <h1>{this.props.story.name}</h1>\n        <p>{this.props.story.description}</p>\n        <div className=\"divider\"></div>\n        <h3>Currently online</h3>\n        {this.props.users.map((user, idx) => {\n          return (\n            <div className=\"user\" key={'user' + idx}>\n              <div class=\"online\"></div>\n              <p>{user}</p>\n            </div>\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nexport default LeftNavbar;\n","import React, {Component} from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport './Story.scss';\nimport Footer from '../Footer';\nimport LeftNavbar from '../LeftNavbar';\nimport axios from 'axios';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = state => {\n  return { name: state.name, loggedIn: state.loggedIn };\n};\n\nclass ConnectedStory extends Component {\n  constructor() {\n    super();\n    this.state = {\n      story: {},\n      words: [],\n      // endpoint: process.env.REACT_APP_API_URL || \"http://127.0.0.1:4001\",\n      endpoint: process.env.NODE_ENV === \"production\" ? \"http://localhost:4001\" : \"http://127.0.0.1:4001\",\n      socket: null,\n      users: [],\n      disabled: false,\n    };\n    console.log(process.env.NODE_ENV);\n    console.log(\"API URL\", process.env.REACT_APP_API_URL);\n  }\n\n  componentWillUnmount() {\n    this.state.socket.close();\n  }\n\n  async componentDidMount() {\n    let {storyId} = this.props.match.params;\n    const {endpoint} = this.state;\n    try {\n      const response = await axios.get(endpoint + \"/stories/\" + storyId);\n      const {story} = response.data;\n      console.log(story);\n      this.setState({story});\n\n      const socket = socketIOClient(endpoint);\n      this.setState({socket});\n\n      console.log(this.props.name + \" is joining\");\n\n      socket.emit(\"join\", {room: storyId, username: this.props.name}, error => {\n        if(error) {\n          alert(error);\n          this.props.history.push('/');\n        }\n      });\n\n      socket.on(\"sendWords\", words => {\n        console.log(\"gettings sent words\", words);\n        this.setState({words});\n      });\n\n      socket.on(\"disable\", data => {\n        this.setState({disabled: true});\n      });\n\n      socket.on(\"enable\", data => {\n        this.setState({disabled: false});\n      });\n\n      socket.on(\"sendUsers\", data => {\n        this.setState({users: data});\n      });\n    } catch(e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    const {words} = this.state;\n    console.log(words);\n    return (\n      <div>\n        <LeftNavbar story={this.state.story} users={this.state.users} />\n        <div className=\"content-outer\">\n          <div className=\"content\">\n            <TransitionGroup>\n              {words.map((value, idx) => {\n                return (<CSSTransition timeout={500} classNames=\"word\">\n                  <p key={idx} className=\"word\">{value.word}</p>\n                </CSSTransition>)\n              })}\n              <div className=\"next-word\"></div>\n            </TransitionGroup>\n          </div>\n        </div>\n        <Footer inactive={this.state.disabled} socket={this.state.socket} storyId={this.state.story._id} />\n      </div>\n    );\n  }\n}\n\nconst Story = connect(mapStateToProps)(ConnectedStory);\n\nexport default Story;\n","export const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";","import React, {Component} from 'react';\nimport './Login.scss';\nimport {connect} from 'react-redux'\nimport {login, logout} from '../../redux/actions';\n\nconst mapStateToProps = state => {\n  return { name: state.name, loggedIn: state.loggedIn };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    login: name => dispatch(login(name)),\n    logout: () => dispatch(logout())\n  };\n}\n\n\nclass ConnectedLogin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      typedName: '',\n      error: null,\n      // endpoint: process.env.REACT_APP_API_URL || \"http://127.0.0.1:4001\",\n      endpoint: process.env.NODE_ENV === \"production\" ? \"http://localhost:4001\" : \"http://127.0.0.1:4001\",\n    };\n\n    console.log(\"API URL\", process.env.REACT_APP_API_URL);\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n\n    this.setState({\n      typedName: value,\n      error: null,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    if(this.props.loggedIn) {\n      this.props.logout();\n    } else {\n      this.props.login(this.state.typedName);\n    }\n\n    this.setState({ typedName: \"\" });\n    console.log(this.props.loggedIn);\n\n    // try {\n    //   const {data} = await axios.post(this.state.endpoint + '/create', null, {params});\n    //   this.props.history.push('/stories/' + data.story._id);\n    // } catch(error) {\n    //   console.log(error);\n    //   this.setState({error: JSON.stringify(error)});\n    // }\n  }\n\n  render() {\n    return (\n      <form id=\"login\" onSubmit={this.handleSubmit}>\n        {this.props.loggedIn ? (\n          <>\n          <h2>Writing as {this.props.name}</h2>\n          <input type=\"submit\" value=\"Log out\" />\n          </>\n        ) : (\n          <>\n            <input type=\"text\" name=\"name\" placeholder=\"what's your name?\" value={this.state.typedName} onChange={this.handleInputChange} />\n            <input type=\"submit\" value=\"Log in\" />\n            <p className=\"error\" style={{display: (this.state.error ? \"block\" : \"none\")}}>Couldn't log in as that user</p>\n          </>\n        )}\n      </form>\n    );\n  }\n}\n\nconst Login = connect(mapStateToProps, mapDispatchToProps)(ConnectedLogin);\n\nexport default Login;","import { LOGIN, LOGOUT } from \"../constants\";\n\nexport function login(payload) {\n    return {\n        type: LOGIN,\n        payload\n    }\n}\n\nexport function logout() {\n    return {\n        type: LOGOUT\n    }\n}","import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport './Book.scss';\n\nclass Book extends Component {\n  render() {\n    console.log(this.props.story);\n    return (\n      <div className={\"book-outer \" + (this.props.create ? \"create\" : \"\")}>\n        {\n          this.props.create ? (\n            <div className=\"book-single\">\n              <h1>create a new story</h1>\n              <FontAwesomeIcon icon={faPlusCircle} className=\"create-book\" ></FontAwesomeIcon>\n            </div>\n          ) : (\n            <>\n              <div className=\"book-header\">\n                <h1>{this.props.story.name}</h1>\n                <p>{this.props.story.description}</p>\n              </div>\n              <div className=\"book-footer\">\n                <p>{this.props.story.length} words</p>\n                {\n                  !this.props.story.onlineCount ? <></> : (\n                    <div className=\"online-outer\">\n                      <div className=\"online\"></div>\n                      <p className=\"online-text\">{this.props.story.onlineCount} writers online</p>\n                    </div>\n                  )\n                }\n              </div>\n            </>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Book;\n","import React, {Component} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport Story from  '../Story';\nimport Login from '../Login';\nimport Book from '../Book';\nimport Logo from '../Logo';\nimport axios from 'axios';\nimport './Home.scss';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport {withRouter} from 'react-router';\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      stories: [],\n      // TODO THIS IS HELLA INSECURE\n      // endpoint: process.env.REACT_APP_API_URL || \"http://127.0.0.1:4001\",\n      endpoint: process.env.NODE_ENV === \"production\" ? \"http://localhost:4001\" : \"http://127.0.0.1:4001\",\n    };\n    console.log(process.env.NODE_ENV);\n    console.log(\"API URL\", process.env.REACT_APP_API_URL);\n  }\n\n  async componentDidMount() {\n    const { endpoint } = this.state;\n    try {\n      const response = await axios.get(endpoint + \"/stories\");\n      const stories = response.data.stories;\n      this.setState({stories});\n    } catch(e) {\n      console.error(e);\n    }\n  }\n\n  render() {\n    const stories = this.state.stories;\n    return (\n      <div className=\"everything-outer\">\n        <Logo size='150' />\n        <h1>Write a story with a bunch of random people online</h1>\n        <Login></Login>\n          <TransitionGroup className=\"books-outer\">\n              {stories.sort((a, b) => {\n                if (a.onlineCount === b.onlineCount) {\n                  return a.length < b.length ? 1 : -1\n               }\n               return a.onlineCount < b.onlineCount ? 1 : -1;\n              }).map((story, idx) => {\n                return (<CSSTransition key={story._id} timeout={500} style={{transitionDelay: idx*25+'ms'}} classNames=\"story\">\n                  <Link to={\"/stories/\" + story._id}>\n                    <Book story={story} />\n                  </Link>\n                </CSSTransition>)\n              })}\n              <CSSTransition key=\"create\" timeout={stories.length*25+'ms'} style={{transitionDelay: stories.length*25+'ms'}} appear={true} classNames=\"story\">\n                <Link to=\"/create\">\n                  <Book create />\n                </Link>\n              </CSSTransition>\n          </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Home);\n","import React, {Component} from 'react';\nimport Logo from '../Logo';\nimport axios from 'axios';\nimport './CreateBook.scss';\nimport {withRouter} from 'react-router';\n\nclass CreateBook extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: '',\n      description: '',\n      error: null,\n      // TODO THIS IS HELLA INSECURE\n      // endpoint: process.env.REACT_APP_API_URL || \"http://127.0.0.1:4001\",\n      endpoint: process.env.NODE_ENV === \"production\" ? \"http://localhost:4001\" : \"http://127.0.0.1:4001\",\n    };\n    console.log(process.env.NODE_ENV);\n    console.log(\"API URL\", process.env.REACT_APP_API_URL);\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n      error: null,\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const params = {\n      name: this.state.title,\n      description: this.state.description,\n    }\n    console.log(\"submitting\", params);\n    try {\n      const {data} = await axios.post(this.state.endpoint + '/create', null, {params});\n      this.props.history.push('/stories/' + data.story._id);\n    } catch(error) {\n      console.log(error);\n      this.setState({error: JSON.stringify(error)});\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"everything-outer\">\n        <Logo size='150' />\n        <h1>Let's start something great</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Title\n            <span>Think of something short and sweet</span>\n          </label>\n          <input type=\"text\" name=\"title\" value={this.state.title} onChange={this.handleInputChange} />\n\n          <label>\n            Description\n            <span>What's this thing even about?</span>\n          </label>\n          <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleInputChange} />\n          <input type=\"submit\" value=\"Submit\" />\n          <p className=\"error\" style={{display: (this.state.error ? \"block\" : \"none\")}}>Error in creating your story</p>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(CreateBook);\n","import React, {Component} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Story from  '../Story';\nimport Home from '../Home';\nimport CreateBook from '../CreateBook';\nimport './RouterOuter.scss';\n\nclass RouterOuter extends Component {\n\n  componentWillMount() {\n    document.title = 'WeWord'\n  }\n\n  render() {\n    return (\n      <div className=\"outer\">\n        <Router>\n          <Switch>\n            <Route path=\"/create\" component={CreateBook} />\n            <Route path=\"/stories/:storyId\" component={Story} />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default RouterOuter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {LOGIN, LOGOUT} from \"../constants\";\n\nconst initialState = {\n    loggedIn: false,\n    name: '',\n}\n\nfunction rootReducer(state = initialState, action) {\n    const newState = {}\n    if(action.type === LOGIN) {\n        state = {\n            loggedIn: true,\n            name: action.payload\n        }\n    }\n    else if(action.type === LOGOUT) {\n        state = initialState;\n    }\n    return state;\n}\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport RouterOuter from './components/Router/index';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nimport ReactGA from 'react-ga';\n\nReactGA.initialize('UA-59921773-10');\nReactGA.pageview(window.location.pathname + window.location.search);\n\nReactDOM.render(\n    <Provider store={store}>\n        <RouterOuter />\n    </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}